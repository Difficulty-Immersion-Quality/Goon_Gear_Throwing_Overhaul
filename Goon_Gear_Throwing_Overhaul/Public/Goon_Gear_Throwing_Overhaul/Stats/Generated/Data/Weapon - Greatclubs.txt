// ==================================== Base entry ====================================
// Changes: Base damage changed from 1d8 to 3d4. Backbreaker added as a baseline weapon action.
// TODO: Redistribute magical variants/make custom ones. They're all right near each other, 1 in Moonrise, the other 2 in The Waning Moon.

new entry "WPN_Greatclub"
type "Weapon"
// using "_BaseWeapon"
using "WPN_Greatclub"
// data "RootTemplate" "19ce6720-03b6-4d22-bf35-4963b510d1da"
// data "Damage Type" "Bludgeoning"
// data "Damage" "1d8"
data "Damage" "3d4"
// data "ValueScale" "0.5"
// data "Weight" "4.5"
// data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);"
data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);UnlockSpell(Target_PostureBreaker)"
// data "PassivesMainHand" "Overwhelm"
data "PassivesOffHand" "Goon_Overwhelm_Offhand"
// data "Weapon Group" "SimpleMeleeWeapon"
// data "Weapon Properties" "Twohanded;Melee;Dippable"
// data "Proficiency Group" "Greatclubs;SimpleWeapons"

// ==================================== Custom entries for "Unwieldy", a new feature of large clubs previously not equippable by humanoids ====================================
// TODO: BlockAbilityModifierDamageBonus() WeaponProperty(Unstowable) WeaponDamageDieOverride(2d6) data "RemoveConditions" "not HasStatus('GOON_UNWIELDY_WEAPON', GetSummoner(context.Source))" GetActiveWeapon(context.Target, true))):ApplyEquipmentStatus(MainHand,GOON_UNWIELDY_WEAPON,100,-1)

new entry "Goon_Unwieldy_Weapon_Passive"
type "PassiveData"
data "Properties" "IsHidden"
data "StatsFunctorContext" "OnDamage"
data "Conditions" "Tagged('HUMANOID',context.Source)"
data "StatsFunctorContext" "OnEquip;OnCreate"
data "StatsFunctors" "ApplyStatus(GOON_UNWIELDY_WEAPON, 100, -1)"

new entry "GOON_UNWIELDY_WEAPON"
type "StatusData"
data "StatusType" "BOOST"
// Unwieldy
data "DisplayName" "ha79285c6g3ef2g4e50gb631ge35822603e91;1"
// The oversized weapon you have equipped takes everything you can muster to wield it. You suffer &lt;LSTag Tooltip="Disadvantage"&gt;Disadvantage&lt;/LSTag&gt; to melee &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt;, as well as &lt;LSTag Tooltip="Dexterity"&gt;Dexterity&lt;/LSTag&gt; &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throws&lt;/LSTag&gt; and &lt;LSTag Tooltip="AbilityCheck"&gt;Checks&lt;/LSTag&gt;.
data "Description" "h27055e6fg27cag4506g9742g1e88d5d8b77f;1"
data "Icon" "statIcons_OathBroken"
data "StackId" "GOON_UNWIELDY_WEAPON"
data "Boosts" "Disadvantage(SavingThrow,Dexterity);Disadvantage(Ability,Dexterity);IF(IsMeleeAttack()):Disadvantage(AttackRoll)"
data "StatusPropertyFlags" "ApplyToDead;IgnoreResting"
data "SoundVocalStart" "WEAK"
data "SoundVocalEnd" "RECOVER"
data "StillAnimationType" "Weakened"

new entry "GOON_UNWIELDY_WEAPON_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableCombatlog;DisableOverhead;DisablePortraitIndicator;ApplyToDead;IgnoreResting"
data "OnRemoveFunctors" "RemoveStatus(GOON_UNWIELDY_WEAPON)"

// ==================================== Argument Solver ====================================
// Changes: Added 1d4 bonus Poison damage.

new entry "MAG_Poison_Greatclub"
type "Weapon"
// using "WPN_Greatclub_1"
using "MAG_Poison_Greatclub"
// data "DefaultBoosts" "WeaponEnchantment(1);WeaponProperty(Magical)"
data "DefaultBoosts" "WeaponEnchantment(1);WeaponProperty(Magical);WeaponDamage(1d4,Poison)"

// ==================================== Gnarled Tree Branch & Heavy Spiked Club ====================================
// Changes: Damage changed from 2d8 to 4d4. Can be equipped by humanoids again. When wielded by a humanoid they suffer Disadvantage to melee Attack Rolls, as well as Disadvantage to Dextery Saving Throws and Ability Checks. The weapon cannot be sheathed due to its size.
// TODO: Make acquisition more predictable and not exploitative.

new entry "WPN_Ogre_Greatclub"
type "Weapon"
// using "WPN_Greatclub"
using "WPN_Ogre_Greatclub"
// data "RootTemplate" "01da5a5b-97cd-4989-9ae3-af646eb35bc9"
// data "UseConditions" "IsNotHumanoid(context.Source)"
data "UseConditions" ""
// data "Damage" "2d8"
data "Damage" "4d4"
// data "Weight" "8.5"
data "PassivesOnEquip" "Goon_Unwieldy_Weapon_Passive"
data "StatusOnEquip" "GOON_UNWIELDY_WEAPON_TECHNICAL"
// data "PersonalStatusImmunities" "SILENCED;SG_Condition;BLEEDING;BURNING"
data "PersonalStatusImmunities" "SG_Condition;SG_Deafened;DEAFENED;SG_Silenced;SILENCED;SG_Bleeding;BLEEDING;SG_Burning;BURNING"
// data "Weapon Properties" "Twohanded;Melee;Dippable"
data "Weapon Properties" "Twohanded;Melee;Dippable;Unstowable"

// ==================================== Greatclub (Minotaur) ====================================
// Changes: Damage changed from 2d12 to 6d4. Can be equipped by humanoids again. When wielded by a humanoid they suffer Disadvantage to melee Attack Rolls, as well as Disadvantage to Dextery Saving Throws and Ability Checks. The weapon cannot be sheathed due to its size.
// TODO: Make acquisition more predictable and not exploitative.

new entry "WPN_Minotaur_Greatclub"
type "Weapon"
// using "WPN_Greatclub"
using "WPN_Minotaur_Greatclub"
// data "UseConditions" "IsNotHumanoid(context.Source)"
data "UseConditions" ""
// data "Damage" "2d12"
data "Damage" "6d4"
// data "BoostsOnEquipMainHand" ""
data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);UnlockSpell(Target_PostureBreaker)"
data "PassivesOnEquip" "Goon_Unwieldy_Weapon_Passive"
data "StatusOnEquip" "GOON_UNWIELDY_WEAPON_TECHNICAL"
// data "Weapon Properties" "Twohanded;Melee;Dippable"
data "Weapon Properties" "Twohanded;Melee;Dippable;Unstowable"

// ==================================== Rat Bat ====================================
// Bug Fix: Bonus 1d6 Piercing damage is now visible in the tooltip.
// Changes: Weapon enchantment increased from +1 to +2. Bonus Piercing damage reduced from 1d6 to 1d4. Overwhelm passive added just like other Greatclubs. Added the Lacerate weapon action to match the theme of a club with nails.

new entry "TWN_RatCatcher"
type "Weapon"
// using "WPN_Greatclub_1"
using "TWN_RatCatcher"
// data "WeaponFunctors" "DealDamage(1d6,Piercing)"
data "WeaponFunctors" ""
// data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);"
data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);UnlockSpell(Target_PostureBreaker);UnlockSpell(Target_Slash_New)"
// data "PassivesMainHand" ""
data "PassivesMainHand" "Overwhelm"
// data "PassivesOffHand" ""
data "PassivesOffHand" "Goon_Overwhelm_Offhand"
// data "DefaultBoosts" "WeaponEnchantment(1);WeaponProperty(Magical)"
data "DefaultBoosts" "WeaponEnchantment(2);WeaponProperty(Magical);WeaponDamage(1d4,Piercing)"

// ==================================== Punch-Drunk Bastard ====================================
// Bug Fix: Tippler's Rage now accounts for all relevant conditions in the Drunk status group.
// Changes: Weapon enchantment increased from +1 to +2. Removed "Zone_Cleave" from the weapon actions.

new entry "MAG_TWN_Brewery_Greatclub"
type "Weapon"
// using "WPN_Greatclub_1"
using "MAG_TWN_Brewery_Greatclub"
// data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);UnlockSpell(Target_PostureBreaker);UnlockSpell(Zone_Cleave)"
data "BoostsOnEquipMainHand" "UnlockSpell(Target_ConcussiveSmash);UnlockSpell(Target_PostureBreaker)"
// data "DefaultBoosts" "WeaponEnchantment(1);WeaponProperty(Magical)"
data "DefaultBoosts" "WeaponEnchantment(2);WeaponProperty(Magical)"

new entry "MAG_BREWER_MACE_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
// data "OnApplyFunctors" "IF(HasStatus('DRUNK') or HasStatus('DRUNK_DRUNKEN_MASTER') or HasStatus('DRINK_ALCOHOL')):ApplyStatus(MAG_DRUNKARD_RAGE, 100, -1)"
data "OnApplyFunctors" "IF(StatusHasStatusGroup(context.StatusId, 'SG_Drunk') or StatusId('DRUNK_DRUNKEN_MASTER')):ApplyStatus(MAG_DRUNKARD_RAGE, 100, -1)"

new entry "MAG_TWN_Brewer_DrunkardRage_Passive"
type "PassiveData"
using "MAG_TWN_Brewer_DrunkardRage_Passive"
// data "StatsFunctors" "IF(context.HasContextFlag(StatsFunctorContext.OnStatusApplied) and (StatusId('DRUNK') or StatusId('DRUNK_DRUNKEN_MASTER') or StatusId('DRINK_ALCOHOL'))):ApplyStatus(MAG_DRUNKARD_RAGE, 100, -1);IF(context.HasContextFlag(StatsFunctorContext.OnStatusRemoved) and (StatusId('DRUNK') or StatusId('DRUNK_DRUNKEN_MASTER') or StatusId('DRINK_ALCOHOL')) and (not HasStatus('DRUNK') and not HasStatus('DRUNK_DRUNKEN_MASTER') and not HasStatus('DRINK_ALCOHOL'))):RemoveStatus(MAG_DRUNKARD_RAGE)"
data "StatsFunctors" "IF(context.HasContextFlag(StatsFunctorContext.OnStatusApplied) and (StatusHasStatusGroup(context.StatusId, 'SG_Drunk') or StatusId('DRUNK_DRUNKEN_MASTER'))):ApplyStatus(MAG_DRUNKARD_RAGE, 100, -1);IF(context.HasContextFlag(StatsFunctorContext.OnStatusRemoved) and (StatusHasStatusGroup(context.StatusId, 'SG_Drunk') or StatusId('DRUNK_DRUNKEN_MASTER')) and (not HasStatus('SG_Drunk') and not HasStatus('DRUNK_DRUNKEN_MASTER'))):RemoveStatus(MAG_DRUNKARD_RAGE)"