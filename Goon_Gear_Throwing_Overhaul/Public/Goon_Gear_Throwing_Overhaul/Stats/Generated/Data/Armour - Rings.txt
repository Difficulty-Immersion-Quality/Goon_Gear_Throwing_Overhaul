// ========================== Callous Glow Ring ==========================
// Changes: Quality is now Rare instead of Uncommon, to reflect it being BiS endgame gear for some builds.

new entry "MAG_Radiant_DamageBonusOnIlluminatedTarget_Ring"
type "Armor"
// using "_Ring_Magic"
using "MAG_Radiant_DamageBonusOnIlluminatedTarget_Ring"
// data "RootTemplate" "afdcde80-f976-4781-86be-75a5fb0ae05e"
// data "Rarity" "Uncommon"
data "Rarity" "Rare"
// data "PassivesOnEquip" "MAG_Radiant_DamageBonusOnIlluminatedTarget_Ring_Passive"
// data "Unique" "1"

// ========================== Coruscation Ring ==========================
// Changes: Quality is now Rare instead of Uncommon, to reflect it being BiS endgame gear for some builds.

new entry "MAG_Radiant_RadiatingOrb_Ring"
type "Armor"
// using "_Ring_Magic"
using "MAG_Radiant_RadiatingOrb_Ring"
// data "RootTemplate" "3bd041cf-bff5-4464-9002-5c17b957b3c7"
// data "Rarity" "Uncommon"
data "Rarity" "Rare"
// data "PassivesOnEquip" "MAG_Radiant_RadiatingOrb_Ring_Passive"
// data "Unique" "1"

// ==================================== After Death Do Us Part ====================================
// Bug Fix: Shadow Possession no longer clears itself instantly upon exiting the downed state.

// new entry "LOW_KerriRing_Ring"
// type "Armor"
// using "_Ring_Magic"
// data "RootTemplate" "d874115c-6b92-4222-b1a2-594cf111b075"
// data "ValueUUID" "94356ef2-bb14-4595-88cf-86f544ef12eb"
// data "Rarity" "Rare"
// data "PassivesOnEquip" "MAG_DeathDo_Shadow_Passive"
// data "Unique" "1"

new entry "MAG_DEATH_DO_SHADOW_POSSESION_DOWNED"
type "StatusData"
data "StatusType" "DOWNED"
// using "DOWNED"
using "MAG_DEATH_DO_SHADOW_POSSESION_DOWNED"
// data "Boosts" "AbilityFailedSavingThrow(Strength);AbilityFailedSavingThrow(Dexterity);CriticalHit(AttackTarget,Success,Always,2.5);IF(not DistanceToTargetGreaterThan(3)):Advantage(AttackTarget);IF(DistanceToTargetGreaterThan(3)):Disadvantage(AttackTarget);StatusImmunity(SG_Prone);StatusImmunity(SG_Condition);StatusImmunity(SHOCKWAVE)"
data "Boosts" "AbilityFailedSavingThrow(Strength);AbilityFailedSavingThrow(Dexterity);CriticalHit(AttackTarget,Success,Always,2.5);IF(not DistanceToTargetGreaterThan(3)):Advantage(AttackTarget);IF(DistanceToTargetGreaterThan(3)):Disadvantage(AttackTarget);StatusImmunity(SG_Prone);StatusImmunity(SHOCKWAVE)"
// data "OnApplyFunctors" "IF(HasStatus('MAG_DEATH_DO_SHADOW_POSSESION_DOWNED_OVERRIDE')):Stabilize();RemoveStatus(RAGE);RemoveStatus(SG_Mad);IF(HasStatus('MAG_DEATH_DO_SHADOW_POSSESION_DOWNED_OVERRIDE')):ApplyStatus(MAG_DEATH_DO_SHADOW_POSSESION, 100, -1)"
data "OnApplyFunctors" "RemoveStatus(SG_Rage);RemoveStatus(SG_Mad);IF(HasStatus('MAG_DEATH_DO_SHADOW_POSSESION_DOWNED_OVERRIDE')):Stabilize();IF(HasStatus('MAG_DEATH_DO_SHADOW_POSSESION_DOWNED_OVERRIDE')):ApplyStatus(MAG_DEATH_DO_SHADOW_POSSESION, 100, -1)"
// data "OnRemoveFunctors" "ResetCombatTurn();RestoreResource(Movement, 100%, 0);RestoreResource(BonusActionPoint, 100%, 0)"

// ==================================== Band of the Mystic Scoundrel ====================================
// Bug Fix: Illusion Quickening no longer triggers when attacking items.
// TODO: Make the bonus action cost for Illusion spells a temporary passive toggle unlocked via status

// new entry "MAG_ArcaneTrickster_Ring"
// type "Armor"
// using "ARM_Ring_E_Gold_A"
// data "RootTemplate" "5b74c9d8-cb88-4a29-99c4-25d98c7d88f7"
// data "ValueUUID" "a229f048-70b0-4b0c-88cb-29b5c6bdb2d0"
// data "Rarity" "Rare"
// data "PassivesOnEquip" "MAG_ArcaneTrickster_Ring_Passive"
// data "Unique" "1"

new entry "MAG_ArcaneTrickster_Ring_Passive"
type "PassiveData"
using "MAG_ArcaneTrickster_Ring_Passive"
// Illusion Quickening
// data "DisplayName" "h114939dbg26e6g4852g9444g0de8a00a150a;2"
// After hitting a creature with a weapon attack, you can cast illusion or enchantment spells as a <LSTag Type="ActionResource" Tooltip="BonusActionPoint">bonus action</LSTag>.
// data "Description" "hf3fe1d3cgb568g4420ga71dg10c48187f73c;1"
// data "StatsFunctorContext" "OnDamage"
// data "Conditions" "IsWeaponAttack()"
data "Conditions" "IsWeaponAttack() and not Item()"
// data "StatsFunctors" "ApplyStatus(SELF, MAG_ARCANE_TRICKSTER_ILLUSION_QUICKENING, 100, 1)"

// ==================================== Ring of Feywild Sparks ====================================
// Bug Fix: The +1 Spell Save DC is now visible.

new entry "MAG_OfFeywildSparks_Ring"
type "Armor"
// using "_Ring_Magic"
using "MAG_OfFeywildSparks_Ring"
// data "RootTemplate" "a4813d7b-2ff0-488b-8152-a27cb75e8d8e"
// data "ValueUUID" "3e8b9d6e-7e83-4fd7-bc99-bb4956d67a2a"
// data "Rarity" "VeryRare"
// data "Boosts" "SpellSaveDC(1)"
data "Boosts" ""
// data "PassivesOnEquip" "MAG_FeyWildSpark_WildMagic_Passive"
data "PassivesOnEquip" "MAG_FeyWildSpark_WildMagic_Passive;MAG_SpellSaveDC_Enchantment_Lesser_Passive"
// data "StatusOnEquip" "MAG_FEYWILD_SPARKS_TECHNICAL"
// data "Unique" "1"

// ==================================== Shadow Blade Ring ====================================
// Bug Fix: Shadow Blade Ring no longer needlessly breaks concentration when unequipped.

// new entry "MAG_Shadow_ShadowBlade_Ring"
// type "Armor"
// using "_Ring_Magic"
// data "RootTemplate" "8cc165d7-0372-4f4b-b4ac-f424f4069af1"
// data "ValueLevel" "5"
// data "Rarity" "Uncommon"
// data "Boosts" "UnlockSpell(Shout_ShadowBlade)"
// data "StatusOnEquip" "MAG_SHADOW_BLADE_RING_TECHNICAL"
// data "Unique" "1"
// data "MinLevel" "1"

new entry "MAG_SHADOW_BLADE_RING_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
using "MAG_SHADOW_BLADE_RING_TECHNICAL"
// %%% Empty
// data "DisplayName" "hedcf34f1g4c08g4626ga6a6g6cf4e7f728b8;1"
// data "StackId" "MAG_SHADOW_BLADE_RING_TECHNICAL"
// data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
// data "OnRemoveFunctors" "IF(HasStatus('MAG_SHADOW_BLADE_OWNER')):BreakConcentration()"
data "OnRemoveFunctors" ""

// ==================================== Shapeshifter's Boon Ring ====================================
// Bug Fix: Mark of the Shifter is removed when the ring is unequipped.
// Bug Fix: Mark of the Shifter is applied when the ring is equipped while the character is already shapeshifted.

new entry "MAG_ShapeshiftersBurgeon_Ring"
type "Armor"
// using "ARM_Ring_B_Gold_A"
using "MAG_ShapeshiftersBurgeon_Ring"
// data "RootTemplate" "6853e585-e9c7-4f26-918e-995342b19d1a"
// data "ValueUUID" "f0e7be35-8be4-483d-afa8-dc9a104ea758"
// data "Rarity" "Uncommon"
// data "PassivesOnEquip" "MAG_ShapeshiftersBurgeon_Passive"
data "StatusOnEquip" "GOON_SHAPESHIFTERS_BOON_TECHNICAL"
// data "Unique" "1"

new entry "MAG_ShapeshiftersBurgeon_Passive"
type "PassiveData"
using "MAG_ShapeshiftersBurgeon_Passive"
// Shapeshifter's Boon
// data "DisplayName" "h59031c8bg2e00g4987g840cg3d573c397472;3"
// While shapeshifting or disguising yourself, gain a +[1] bonus to all <LSTag Tooltip="AbilityCheck">Checks</LSTag>. 
// data "Description" "h70faacb7g04d4g4e78g93a5g0ab17c91d651;3"
// data "DescriptionParams" "1d4"
// data "StatsFunctorContext" "OnStatusApplied"
data "Conditions" "StatusHasStatusGroup(context.StatusId, 'SG_Polymorph') or StatusHasStatusGroup(context.StatusId, 'SG_Polymorph_BeastShape')"
// data "StatsFunctors" "IF(StatusHasStatusGroup(context.StatusId, 'SG_Polymorph') or StatusHasStatusGroup(context.StatusId, 'SG_Polymorph_BeastShape')):ApplyStatus(MAG_SHAPESHIFTERS_BOON, 100, -1)"
data "StatsFunctors" "ApplyStatus(MAG_SHAPESHIFTERS_BOON, 100, -1)"

new entry "GOON_SHAPESHIFTERS_BOON_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "StatusPropertyFlags" "DisableOverhead;DisableCombatlog;DisablePortraitIndicator;IgnoreResting;ApplyToDead"
data "OnApplyFunctors" "IF(HasStatus('SG_Polymorph') or HasStatus('SG_Polymorph_BeastShape')):ApplyStatus(MAG_SHAPESHIFTERS_BOON, 100, -1)"
data "OnRemoveFunctors" "RemoveStatus(MAG_SHAPESHIFTERS_BOON)"

// ==================================== "Tarnished Ring" > "Magic Ring" ====================================
// Bug Fix: Now uses its appropriate template, recieving its proper name "Magic Ring".
// Changes: Now provides a +1 to Spell Save DC instead of just being vendor fodder.

new entry "QUEST_WYR_RestoredMagicRing"
type "Armor"
// using "_Ring_Magic"
using "QUEST_WYR_RestoredMagicRing"
// data "RootTemplate" "ecf4a8a4-7859-4a82-8c08-0c9526f29500"
data "RootTemplate" "9030e638-b086-4e0d-aeb9-365b03470679"
data "PassivesOnEquip" "MAG_SpellSaveDC_Enchantment_Lesser_Passive"

// ==================================== The Whispering Promise ====================================
// Bug Fix: Blessed Mercy now specifies that it applies Bless, instead of describing the functionality of Bless.
// Changes: Quality is now Rare instead of Uncommon, to reflect it being BiS endgame gear for some builds.

new entry "UNI_MassHealRing"
type "Armor"
// using "_Ring_Magic"
using "UNI_MassHealRing"
// data "RootTemplate" "4aef9bb0-38a8-428e-8b87-6e462d612dd6"
// data "ItemGroup" ""
// data "Rarity" "Uncommon"
data "Rarity" "Rare"
// data "PassivesOnEquip" "UNI_MassHealRing_Passive"
// data "ObjectCategory" "MagicCleric"
// data "Unique" "1"

new entry "UNI_MassHealRing_Passive"
type "PassiveData"
using "UNI_MassHealRing_Passive"
// When you heal a creature, it gains a +[1] bonus to &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt; and &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throws&lt;/LSTag&gt; for [2] turns.
// data "Description" "h7f97b95egd796g4422ga863g38ab6d4a2604;8"
// Whenever you heal a creature it becomes &lt;LSTag Type="Status" Tooltip="BLESS"&gt;Blessed&lt;/LSTag&gt; for [1] turns.
data "Description" "h1585ed41g588ag4ff4gad07gb09acc5e3792;1"
// data "DescriptionParams" "1d4;2"
data "DescriptionParams" "2"


// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

// ==================================== XXXXXXXXXXXX ====================================
// TODO: Something/anything.

// gear entry

// new entry "GOON_XXXXXXXXXXXXXXXX_ARMOUR_TECHNICAL"
// type "StatusData"
// data "StatusType" "BOOST"
// data "StatusPropertyFlags" "DisablePortraitIndicator;DisableOverhead;DisableCombatlog;IgnoreResting"

