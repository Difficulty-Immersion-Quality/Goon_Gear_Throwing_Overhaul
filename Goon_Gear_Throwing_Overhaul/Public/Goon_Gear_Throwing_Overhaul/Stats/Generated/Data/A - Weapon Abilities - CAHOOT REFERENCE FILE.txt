// // TODO: Delete Cahoot's shit once done referencing
// // ========================== Weapon Actions ==========================
// // Make weapon actions compatible with spells such as Shillelagh that change your melee weapon attack rolls/damage scale with your spellcasting modifier instead of Strength/Dexterity whenever the DealDamage function adds Strength/Dexterity modifier

// // Maiming Strike
// new entry "Target_CripplingStrike"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_CripplingStrike"
// // data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Constitution, ManeuverSaveDC()+2)):ApplyStatus(CRIPPLED,100,2);DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType); ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Constitution, ManeuverSaveDC()+2)):ApplyStatus(CRIPPLED,100,2);IF(HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), Piercing);IF(HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), Piercing);ExecuteWeaponFunctors(MainHand)"

// // Rush Attack
// new entry "Rush_SpringAttack"
// type "SpellData"
// data "SpellType" "Rush"
// using "Rush_SpringAttack"
// // data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Strength, ManeuverSaveDC())):ApplyStatus(OFF_BALANCED,100,2);DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), Piercing);ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Strength, ManeuverSaveDC())):ApplyStatus(OFF_BALANCED,100,2);IF(HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), Piercing);IF(HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), Piercing);ExecuteWeaponFunctors(MainHand)"

// // Disarming Strike
// new entry "Target_DisarmingStrike"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_DisarmingAttack"
// // data "SpellSuccess" "IF(not SavingThrow(Ability.Strength, ManeuverSaveDC()+2)):ApplyStatus(DISARM,100,0);DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(not SavingThrow(Ability.Strength, ManeuverSaveDC()+2)):ApplyStatus(DISARM,100,0);IF(HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);IF(HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"

// // Heartstopper
// new entry "Target_HeartStopper"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_HeartStopper"
// // data "SpellSuccess" "IF(not SavingThrow(Ability.Constitution, ManeuverSaveDC()+2)):ApplyStatus(CHEST_TRAUMA,100,2);DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType); ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(not SavingThrow(Ability.Constitution, ManeuverSaveDC()+2)):ApplyStatus(CHEST_TRAUMA,100,2);IF(HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);IF(HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), MainMeleeWeaponDamageType); ExecuteWeaponFunctors(MainHand)"

// // Backbreaker
// new entry "Target_PostureBreaker"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_PostureBreaker"
// // data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Strength, ManeuverSaveDC())):ApplyStatus(PRONE,100,2);DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(Character() and not SavingThrow(Ability.Strength, ManeuverSaveDC())):ApplyStatus(PRONE,100,2);IF(HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);IF(HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"

// // Weakening Strike
// new entry "Target_HinderingSmash"
// type "SpellData"
// data "SpellType" "Target"
// using "Target_HinderingSmash"
// // data "SpellSuccess" "IF(Character() and HasWeaponInMainHand() and not SavingThrow(Ability.Strength, ManeuverSaveDC()+2)):ApplyStatus(HINDERED,100,2);IF(not Summon() and not Tagged('UNDEAD') and not HasStatus('SG_Polymorph') and not Tagged('CONSTRUCT') and not Tagged('CREATURE_SPORE_SERVANT') and not IsImmuneToStatus('KNOCKED_OUT') ):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType, Nonmagical, Nonlethal);IF(Summon() or Tagged('UNDEAD') or HasStatus('SG_Polymorph') or Tagged('CONSTRUCT') or Tagged('CREATURE_SPORE_SERVANT') or IsImmuneToStatus('KNOCKED_OUT')):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"
// data "SpellSuccess" "IF(Character() and HasWeaponInMainHand() and not SavingThrow(Ability.Strength, ManeuverSaveDC()+2)):ApplyStatus(HINDERED,100,2);IF(not Summon() and not Tagged('UNDEAD') and not HasStatus('SG_Polymorph') and not Tagged('CONSTRUCT') and not Tagged('CREATURE_SPORE_SERVANT') and not IsImmuneToStatus('KNOCKED_OUT') and HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), MainMeleeWeaponDamageType, Nonmagical, Nonlethal);IF(not Summon() and not Tagged('UNDEAD') and not HasStatus('SG_Polymorph') and not Tagged('CONSTRUCT') and not Tagged('CREATURE_SPORE_SERVANT') and not IsImmuneToStatus('KNOCKED_OUT') and HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType, Nonmagical, Nonlethal);;IF(Summon() or Tagged('UNDEAD') or HasStatus('SG_Polymorph') or Tagged('CONSTRUCT') or Tagged('CREATURE_SPORE_SERVANT') or IsImmuneToStatus('KNOCKED_OUT') and HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType);IF(not Summon() and not Tagged('UNDEAD') and not HasStatus('SG_Polymorph') and not Tagged('CONSTRUCT') and not Tagged('CREATURE_SPORE_SERVANT') and not IsImmuneToStatus('KNOCKED_OUT') and HasAnyStatus({}, {}, {'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(DexterityModifier,StrengthModifier), MainMeleeWeaponDamageType, Nonmagical, Nonlethal);;IF(Summon() or Tagged('UNDEAD') or HasStatus('SG_Polymorph') or Tagged('CONSTRUCT') or Tagged('CREATURE_SPORE_SERVANT') or IsImmuneToStatus('KNOCKED_OUT') and HasAnyStatus({'HEXBLADE_BIND', 'PACT_BLADE', 'SHILLELAGH', 'MAG_MELEE_CASTER_BOON', 'LHB_SEL_TASHASOTHERWORLDLYGUISE_MAGICWEAPON', 'FourEle_Attuned'}, {}, {}, GetAttackWeapon())):DealDamage(ImprovisedWeapon+max(IntelligenceModifier, WisdomModifier, CharismaModifier), MainMeleeWeaponDamageType);ExecuteWeaponFunctors(MainHand)"


