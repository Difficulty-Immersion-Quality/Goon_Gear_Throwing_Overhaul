// ==================================== Ritual Axe ====================================
// Bug Fix: The Scourge Mistress' Bane now states that attacks are guaranteed to apply Bane, instead of it being a chance to apply.
// Bug Fix: The wielder does not take self inflicted damage if the target dies, is downed or knocked out, or is already afflicted with Bane.
// Changes: If you attack a target already afflicated with Bane you increase the duration of the condition by 1 turn.

new entry "GOB_PainPriest_Axe_Passive"
type "PassiveData"
using "GOB_PainPriest_Axe_Passive"
// Chance to inflict upon the target a 1d4 penalty to &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt; and &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throws&lt;/LSTag&gt;. If the attacker still has 50% or more &lt;LSTag Tooltip="HitPoints"&gt;hit points&lt;/LSTag&gt;, they take [1] themselves.
// data "Description" "h285f8848g4997g4ac5gb35ag9178dd91f49c;8"
// Attacks with this weapon inflict &lt;LSTag Type="Status" Tooltip="BANE"&gt;Bane&lt;/LSTag&gt; upon the target for [1] turns, if the target is afflicted with &lt;LSTag Type="Status" Tooltip="BANE"&gt;Bane&lt;/LSTag&gt; already increase the duration by [2]. If the attacker still has 50% or more &lt;LSTag Tooltip="HitPoints"&gt;hit points&lt;/LSTag&gt; when &lt;LSTag Type="Status" Tooltip="BANE"&gt;Bane&lt;/LSTag&gt; is inflicted on the target, they take [3].
data "Description" "h5695a236g1ba7g4577gb2dcg5c7631abe8da;1"
// data "DescriptionParams" "DealDamage(1d6,Piercing)"
data "DescriptionParams" "2;1;DealDamage(1d6,Piercing)"
// A Baned creature receives a 1d4 penalty to &lt;LSTag Tooltip="AttackRoll"&gt;Attack Rolls&lt;/LSTag&gt; and &lt;LSTag Tooltip="SavingThrow"&gt;Saving Throws&lt;/LSTag&gt;.
// data "ExtraDescription" "hac996f86g8e10g453fga993g6aaf77a0760e;1"
data "ExtraDescription" ""
// data "Conditions" "AttackedWithPassiveSourceWeapon()"
data "Conditions" "AttackedWithPassiveSourceWeapon() and not (HasHPLessThan(1) or IsKillingBlow() or IsDowned() or HasStatus('KNOCKED_OUT') or HasStatus('KNOCKED_OUT_TEMPORARILY') or HasStatus('KNOCKED_OUT_PERMANENTLY'))"
// data "StatsFunctors" "ApplyStatus(BANE,100,2);IF(HasHPPercentageWithoutTemporaryHPEqualOrMoreThan(50, context.Source)):DealDamage(SELF,1d6,Piercing,Magical)"
data "StatsFunctors" "IF(HasHPPercentageWithoutTemporaryHPEqualOrMoreThan(50, context.Source) and not HasStatus('BANE', context.Target)):DealDamage(SELF,1d6,Piercing,Magical);IF(not HasStatus('BANE', context.Target)):ApplyStatus(BANE,100,2);IF(HasStatus('BANE', context.Target)):SetStatusDuration(BANE,1,Add)"